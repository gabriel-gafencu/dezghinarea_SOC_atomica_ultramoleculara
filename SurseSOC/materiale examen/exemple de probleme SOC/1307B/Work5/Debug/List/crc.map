################################################################################
#                                                                              #
#      IAR Universal Linker V5.2.5.17                                          #
#                                                                              #
#           Link time     =  18/Dec/2014  15:36:25                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\1307B\Work5\Debug\List\crc.map                 #
#           Output file 1 =  D:\1307B\Work5\Debug\Exe\crc.d90                  #
#                            Format: debug                                     #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  D:\1307B\Work5\Debug\Obj\main.r90                 #
#                            D:\1307B\Work5\Debug\Obj\usart.r90 -o             #
#                            D:\1307B\Work5\Debug\Exe\crc.d90 -l               #
#                            D:\1307B\Work5\Debug\List\crc.map -xms            #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 6.0\avr\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\src\template\cfgm16.xcl"            #
#                            (-D_..X_INTVEC_SIZE=54 -D_..X_FLASH_NEND=3FFF     #
#                            -D_..X_FLASH_END=3FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_TSIZE=(100-_..X_SRAM_BASE)            #
#                            -D_..X_SRAM_END=45F                               #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_END=1FF        #
#                            -D_..X_EEPROM_START=0) -Hff -J2,crc16,,,,1,0      #
#                            -D_..X_HEAP_SIZE=10 -D_..X_TINY_HEAP_SIZE=0       #
#                            -D_..X_NEAR_HEAP_SIZE=0 -D_..X_FAR_HEAP_SIZE=0    #
#                            -D_..X_HUGE_HEAP_SIZE=0 -D_..X_CSTACK_SIZE=20     #
#                            -D_..X_RSTACK_SIZE=20                             #
#                            -D_..X_FLASH_CODE_END=_..X_FLASH_END -f           #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\src\template\cfg3soim.xcl"          #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -P(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=2                               #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -rt -s            #
#                            __program_start                                   #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 6.0\avr\LIB\CLIB\cl3s-ec_mul-sf.r90"        #
#                            -e_large_write=_formatted_write                   #
#                            -e_large_read=_formatted_read                     #
#                                                                              #
#                           Copyright (C) 1987-2011 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R10             = REG
  R11             = REG
  R12             = REG
  R13             = REG
  R14             = REG
  R15             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __SystemLibrary = CLib
  __cpu           = 3
  __cpu_name      = ATmega16
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3
  __tiny_avr      = false

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000045F 
           _..X_RSTACK_BASE        00000060 
           _..X_CSTACK_END         0000045F 
           _..X_CSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000002 
           _..X_FLASH_CODE_END     00003FFF 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         000001FF 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000045F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000045F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000045F 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00003FFF 
           _..X_FLASH_NEND         00003FFF 
           _..X_INTVEC_SIZE        00000054 
    *************************************************************************

  FILE NAME : D:\1307B\Work5\Debug\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   USART_transmit (usart)
                                                   interrupt_routine_USART_RXC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR                  0000002C 
           LOCAL                   ADDRESS         
           =====                   =======         
           UDR                     0000002C 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   interrupt_routine_USART_RXC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           character               000000A0 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000A1 - 000000B4 (0x14 bytes), align: 0
  Segment part 14.            Intra module refs:   interrupt_routine_USART_RXC
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vect                    000000A1 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000B5 - 000000B6 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   interrupt_routine_USART_RXC
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           indexVec                000000B5 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000230 - 000002D3 (0xa4 bytes), align: 1
  Segment part 27.            Intra module refs:   interrupt_routine_USART_RXC::??INTVEC 44
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           interrupt_routine_USART_RXC
                                   00000230 
               interrupt function
               calls direct
               RSTACK = 00000000 ( 00000002 )
               CSTACK = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002D4 - 00000355 (0x82 bytes), align: 1
  Segment part 28.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           crc16                   000002D4 
               RSTACK = 00000000 ( 00000002 )
               CSTACK = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000030 - 0000022F (0x200 bytes), align: 0
  Segment part 21.            Intra module refs:   crc16wtable
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           crc16tab                00000030 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000356 - 0000039F (0x4a bytes), align: 1
  Segment part 29.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           crc16wtable             00000356 
               RSTACK = 00000000 ( 00000002 )
               CSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003A0 - 000003C5 (0x26 bytes), align: 1
  Segment part 31.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chToHex                 000003A0 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000B7 - 000000B8 (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           my_crc16                000000B7 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000B9 - 000000BC (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           my_crc16_t              000000B9 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000BD - 000000BE (0x2 bytes), align: 0
  Segment part 25.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adresaFinal             000000BD 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000BF - 000000C0 (0x2 bytes), align: 0
  Segment part 26.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adresaInceput           000000BF 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003C6 - 000005A7 (0x1e2 bytes), align: 1
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000003C6        ?cstartup_call_main (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000004 )
               CSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002F (0x30 bytes), align: 1
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           interrupt_routine_USART_RXC::??INTVEC 44
                                   0000002C 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000682 - 00000687 (0x6 bytes), align: 0
  Segment part 11.            Intra module refs:   character
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   00000682 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000068E - 0000068E (0x1 bytes), align: 0
  Segment part 13.            Intra module refs:   character
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000688 - 0000068D (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   adresaFinal
                                                   adresaInceput
                                                   indexVec
                                                   my_crc16
                                                   my_crc16_t
                                                   vect
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000688 

    *************************************************************************

  FILE NAME : D:\1307B\Work5\Debug\Obj\usart.r90
  PROGRAM MODULE, NAME : usart

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000040 - 00000040 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRH                00000040 
           LOCAL                   ADDRESS         
           =====                   =======         
           UBRRH                   00000040 
           UCSRC                   00000040 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
           LOCAL                   ADDRESS         
           =====                   =======         
           DDRD                    00000031 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   USART_transmit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRA                0000002B 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSRA                   0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRB                0000002A 
           LOCAL                   ADDRESS         
           =====                   =======         
           UCSRB                   0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   USART_initialize
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRL                00000029 
           LOCAL                   ADDRESS         
           =====                   =======         
           UBRRL                   00000029 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005A8 - 000005C3 (0x1c bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USART_initialize        000005A8        main (main)
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005C4 - 000005CB (0x8 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USART_transmit          000005C4        interrupt_routine_USART_RXC (main)
               RSTACK = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 6.0\avr\LIB\CLIB\cl3s-ec_mul-sf.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000005CC - 000005D1 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  000005CE 
           ?C_EXIT                 000005CE 
           ?C_FUNCALL              000005CC 
           _exit                   000005CC        ?cstartup_call_main (?C_STARTUP)
           exit                    000005CC        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000005D2, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              000005D2        Segment part 0 (?RESET)
           __RESTART               000005D2 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005D2 - 000005DD (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005DE - 000005E1 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    000005DE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005E2 - 000005E9 (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      000005E2        ?<Segment init: NEAR_I> (main)
                                                   ?<Segment init: NEAR_Z> (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005EA - 000005F5 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     000005EA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000005F6 - 00000601 (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_L02              000005F6        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000602 - 00000603 (0x2 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE12_L09         00000602        main (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000604 - 00000605 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   ?PROLOGUE12_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE11_L09         00000604 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000606 - 00000607 (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   ?PROLOGUE11_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE10_L09         00000606 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000608 - 00000609 (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   ?PROLOGUE10_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE9_L09          00000608 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000060A - 0000060B (0x2 bytes), align: 1
  Segment part 8.             Intra module refs:   ?PROLOGUE9_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          0000060A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000060C - 0000060D (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?PROLOGUE8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          0000060C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000060E - 0000060F (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?PROLOGUE7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          0000060E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000610 - 00000611 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?PROLOGUE6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          00000610 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000612 - 00000613 (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?PROLOGUE5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          00000612        crc16 (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000614 - 00000615 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          00000614 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000616 - 00000617 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          00000616 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000618 - 00000619 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          00000618 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000061A - 0000061B (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000061C - 0000061D (0x2 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        0000061C        crc16 (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000061E - 0000061F (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        0000061E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000620 - 00000621 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        00000620 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000622 - 00000623 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        00000622 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000624 - 0000062D (0xa bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        00000624 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR8_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R8_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR9_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R9_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR10_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R10_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR11_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R11_is_cg_reg
                                   0000062E        main (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000062E - 00000631 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000062E        ?call_low_level_init (?C_STARTUP)
               RSTACK = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000632 - 00000639 (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00000632 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000063A - 00000641 (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0000063A 
               RSTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000642 - 0000064D (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000064E - 00000681 (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0000064E        ?need_segment_init (?C_STARTUP)
               calls direct
               RSTACK = 00000000 ( 00000002 )

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000002F (0x30 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000068F - 00003FFD (0x396f bytes), align: 0
  Segment part 0.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?CHECKSUM

  SEGMENTS IN THE MODULE
  ======================
CHECKSUM
  Relative segment, address: CODE 00003FFE - 00003FFF (0x2 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __checksum              00003FFE 




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 0000002F          30   com    1
NEAR_F               CODE          00000030 - 0000022F         200   rel    0
CODE                 CODE          00000230 - 00000681         452   rel    1
INITTAB              CODE          00000682 - 0000068D           C   rel    0
NEAR_ID              CODE          0000068E - 0000068E           1   rel    0
?FILL1               CODE          0000068F - 00003FFD        396F   rel    0
CHECKSUM             CODE          00003FFE - 00003FFF           2   rel    0
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000029 - 0000002C           4 
                     DATA          00000031 - 00000031           1 
                     DATA          00000040 - 00000040           1 
CSTACK               DATA          00000060 - 0000007F          20   dse    0
RSTACK               DATA          00000080 - 0000009F          20   dse    0
NEAR_I               DATA          000000A0 - 000000A0           1   rel    0
NEAR_Z               DATA          000000A1 - 000000C0          20   rel    0


                ****************************************
                *                                      *
                *              CHECKSUMS               *
                *                                      *
                ****************************************

Symbol      Checksum  Memory  Start      End       Initial value
------      --------  ------  -----      ---       -------------
__checksum    0xb482   CODE   00000000 - 00003FFD  0x0000 (#0x0000)

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 1 681 bytes of CODE memory (+            14 703 range fill )
    97 bytes of DATA memory (+ 6 absolute )

Errors: none
Warnings: none

