###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.11.1.50453 for Atmel AVR        29/Dec/2015  17:03:08 #
# Copyright 1996-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\main.c        #
#    Command line =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\main.c        #
#                    --cpu=m16 -ms -o D:\soc2015\1305B\LucruExtra\WDT_genFr+T #
#                    IM1\Debug\Obj\ -lC D:\soc2015\1305B\LucruExtra\WDT_genFr #
#                    +TIM1\Debug\List\ -lA D:\soc2015\1305B\LucruExtra\WDT_ge #
#                    nFr+TIM1\Debug\List\ --initializers_in_flash --no_cse    #
#                    --no_inline --no_code_motion --no_cross_call             #
#                    --no_clustering --no_tbaa --debug                        #
#                    -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 --clib -On #
#    List file    =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\Debug\List\ma #
#                    in.lst                                                   #
#    Object file  =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\Debug\Obj\mai #
#                    n.r90                                                    #
#                                                                             #
#                                                                             #
###############################################################################

D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\main.c
      1          #include<iom16.h>

   \                                 In  segment ABSOLUTE, at 0x59
   \   union <unnamed> volatile __io _A_TIMSK
   \                     _A_TIMSK:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4f
   \   union <unnamed> volatile __io _A_TCCR1A
   \                     _A_TCCR1A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4e
   \   union <unnamed> volatile __io _A_TCCR1B
   \                     _A_TCCR1B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4c
   \   union <unnamed> volatile __io _A_TCNT1
   \                     _A_TCNT1:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x4a
   \   union <unnamed> volatile __io _A_OCR1A
   \                     _A_OCR1A:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x41
   \   union <unnamed> volatile __io _A_WDTCR
   \                     _A_WDTCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x37
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1
      2          #include<inavr.h>
      3          

   \                                 In  segment NEAR_N, align 1, keep-with-next
      4          __no_init unsigned char flag;
   \                     flag:
   \   00000000                      DS8 1
      5          
      6          #pragma vector = TIMER1_COMPA_vect

   \                                 In  segment CODE, align 2, keep-with-next
      7          __interrupt void isr_TIMER1_COMPA_vect()
   \                     isr_TIMER1_COMPA_vect:
      8          {
   \   00000000   931A               ST      -Y, R17
   \   00000002   930A               ST      -Y, R16
   \   00000004   B71F               IN      R17, 0x3F
      9           if(flag == 0)
   \   00000006   9100....           LDS     R16, flag
   \   0000000A   2300               TST     R16
   \   0000000C   F459               BRNE    ??isr_TIMER1_COMPA_vect_0
     10           {
     11             WDTCR = (0 << WDP2) | (1 << WDP1) | (1 << WDP0);
   \   0000000E   E003               LDI     R16, 3
   \   00000010   BD01               OUT     0x21, R16
     12             WDTCR |= (1 << WDE);
   \   00000012   B501               IN      R16, 0x21
   \   00000014   6008               ORI     R16, 0x08
   \   00000016   BD01               OUT     0x21, R16
     13             flag = 1;
   \   00000018   E001               LDI     R16, 1
   \   0000001A   9300....           STS     flag, R16
     14             TIMSK = (0 << OCIE1A);
   \   0000001E   E000               LDI     R16, 0
   \   00000020   BF09               OUT     0x39, R16
   \   00000022   C00A               RJMP    ??isr_TIMER1_COMPA_vect_1
     15           }
     16           else
     17           {
     18             WDTCR = (0 << WDP2) | (1 << WDP1) | (0 << WDP0);
   \                     ??isr_TIMER1_COMPA_vect_0:
   \   00000024   E002               LDI     R16, 2
   \   00000026   BD01               OUT     0x21, R16
     19             WDTCR |= (1 << WDE);
   \   00000028   B501               IN      R16, 0x21
   \   0000002A   6008               ORI     R16, 0x08
   \   0000002C   BD01               OUT     0x21, R16
     20             flag = 0;
   \   0000002E   E000               LDI     R16, 0
   \   00000030   9300....           STS     flag, R16
     21             TIMSK = (0 << OCIE1A);
   \   00000034   E000               LDI     R16, 0
   \   00000036   BF09               OUT     0x39, R16
     22           }
     23          }
   \                     ??isr_TIMER1_COMPA_vect_1:
   \   00000038   BF1F               OUT     0x3F, R17
   \   0000003A   9109               LD      R16, Y+
   \   0000003C   9119               LD      R17, Y+
   \   0000003E   9518               RETI
   \   00000040                      REQUIRE _A_WDTCR
   \   00000040                      REQUIRE _A_TIMSK
     24          
     25          

   \                                 In  segment CODE, align 2, keep-with-next
     26          void main( void )
   \                     main:
     27          {
     28            TIMSK |= (1 << OCIE1A);
   \   00000000   B709               IN      R16, 0x39
   \   00000002   6100               ORI     R16, 0x10
   \   00000004   BF09               OUT     0x39, R16
     29            __enable_interrupt();
   \   00000006   9478               SEI
     30            DDRB = (1 << PB0);
   \   00000008   E001               LDI     R16, 1
   \   0000000A   BB07               OUT     0x17, R16
     31            if(flag == 0)
   \   0000000C   9100....           LDS     R16, flag
   \   00000010   2300               TST     R16
   \   00000012   F479               BRNE    ??main_0
     32            {
     33              PORTB = (1 << PB0);
   \   00000014   E001               LDI     R16, 1
   \   00000016   BB08               OUT     0x18, R16
     34              TCCR1A = (1 << WGM11) | (1 << WGM10);
   \   00000018   E003               LDI     R16, 3
   \   0000001A   BD0F               OUT     0x2F, R16
     35              TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (1 << CS11) | (0 << CS10);
   \   0000001C   E10A               LDI     R16, 26
   \   0000001E   BD0E               OUT     0x2E, R16
     36              OCR1A = 16804; //22665;
   \   00000020   EA04               LDI     R16, 164
   \   00000022   E411               LDI     R17, 65
   \   00000024   BD1B               OUT     0x2B, R17
   \   00000026   BD0A               OUT     0x2A, R16
     37              TCNT1 = 0;
   \   00000028   E000               LDI     R16, 0
   \   0000002A   E010               LDI     R17, 0
   \   0000002C   BD1D               OUT     0x2D, R17
   \   0000002E   BD0C               OUT     0x2C, R16
   \   00000030   C00E               RJMP    ??main_1
     38            }
     39            else
     40            {
     41              PORTB = (0 << PB0);
   \                     ??main_0:
   \   00000032   E000               LDI     R16, 0
   \   00000034   BB08               OUT     0x18, R16
     42              TCCR1A = (1 << WGM11) | (1 << WGM10);
   \   00000036   E003               LDI     R16, 3
   \   00000038   BD0F               OUT     0x2F, R16
     43              TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (1 << CS11) | (0 << CS10);
   \   0000003A   E10A               LDI     R16, 26
   \   0000003C   BD0E               OUT     0x2E, R16
     44              OCR1A = 9380; //12335;
   \   0000003E   EA04               LDI     R16, 164
   \   00000040   E214               LDI     R17, 36
   \   00000042   BD1B               OUT     0x2B, R17
   \   00000044   BD0A               OUT     0x2A, R16
     45              TCNT1 = 0;
   \   00000046   E000               LDI     R16, 0
   \   00000048   E010               LDI     R17, 0
   \   0000004A   BD1D               OUT     0x2D, R17
   \   0000004C   BD0C               OUT     0x2C, R16
     46            } 
     47            while(1)
   \                     ??main_1:
   \   0000004E   CFFF               RJMP    ??main_1
   \   00000050                      REQUIRE _A_TIMSK
   \   00000050                      REQUIRE _A_DDRB
   \   00000050                      REQUIRE _A_PORTB
   \   00000050                      REQUIRE _A_TCCR1A
   \   00000050                      REQUIRE _A_TCCR1B
   \   00000050                      REQUIRE _A_OCR1A
   \   00000050                      REQUIRE _A_TCNT1
     48              ;
     49          }

   \                                 In  segment INTVEC, offset 0x18, root
   \                     `??isr_TIMER1_COMPA_vect??INTVEC 24`:
   \   00000018   ........           JMP     isr_TIMER1_COMPA_vect

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
       2      2  isr_TIMER1_COMPA_vect
       0      2  main


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??isr_TIMER1_COMPA_vect??INTVEC 24
       1  _A_DDRB
       2  _A_OCR1A
       1  _A_PORTB
       1  _A_TCCR1A
       1  _A_TCCR1B
       2  _A_TCNT1
       1  _A_TIMSK
       1  _A_WDTCR
       1  flag
      64  isr_TIMER1_COMPA_vect
      80  main

 
  10 bytes in segment ABSOLUTE
 144 bytes in segment CODE
   4 bytes in segment INTVEC
   1 byte  in segment NEAR_N
 
 144 bytes of CODE memory (+  4 bytes shared)
   1 byte  of DATA memory (+ 10 bytes shared)

Errors: none
Warnings: none
