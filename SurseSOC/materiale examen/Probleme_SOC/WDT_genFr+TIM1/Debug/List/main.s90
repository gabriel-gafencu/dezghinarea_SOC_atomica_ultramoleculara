///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.11.1.50453 for Atmel AVR       29/Dec/2015  17:03:08 /
// Copyright 1996-2011 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\main.c       /
//    Command line =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\main.c       /
//                    --cpu=m16 -ms -o D:\soc2015\1305B\LucruExtra\WDT_genFr+ /
//                    TIM1\Debug\Obj\ -lC D:\soc2015\1305B\LucruExtra\WDT_gen /
//                    Fr+TIM1\Debug\List\ -lA D:\soc2015\1305B\LucruExtra\WDT /
//                    _genFr+TIM1\Debug\List\ --initializers_in_flash         /
//                    --no_cse --no_inline --no_code_motion --no_cross_call   /
//                    --no_clustering --no_tbaa --debug                       /
//                    -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 --clib    /
//                    -On                                                     /
//    List file    =  D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\Debug\List\m /
//                    ain.s90                                                 /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega16"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        PUBWEAK `??isr_TIMER1_COMPA_vect??INTVEC 24`
        PUBWEAK _A_DDRB
        PUBWEAK _A_OCR1A
        PUBWEAK _A_PORTB
        PUBWEAK _A_TCCR1A
        PUBWEAK _A_TCCR1B
        PUBWEAK _A_TCNT1
        PUBWEAK _A_TIMSK
        PUBWEAK _A_WDTCR
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        PUBLIC flag
        PUBLIC isr_TIMER1_COMPA_vect
        FUNCTION isr_TIMER1_COMPA_vect,0231H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC main
        FUNCTION main,0a03H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 SameValue
          CFI R17 SameValue
          CFI R18 SameValue
          CFI R19 SameValue
          CFI R20 SameValue
          CFI R21 SameValue
          CFI R22 SameValue
          CFI R23 SameValue
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 SameValue
          CFI R31 SameValue
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon1
        
isr_TIMER1_COMPA_vect SYMBOL "isr_TIMER1_COMPA_vect"
`??isr_TIMER1_COMPA_vect??INTVEC 24` SYMBOL "??INTVEC 24", isr_TIMER1_COMPA_vect

// D:\soc2015\1305B\LucruExtra\WDT_genFr+TIM1\main.c
//    1 #include<iom16.h>

        ASEGN ABSOLUTE:DATA:NOROOT,059H
// union <unnamed> volatile __io _A_TIMSK
_A_TIMSK:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,04fH
// union <unnamed> volatile __io _A_TCCR1A
_A_TCCR1A:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,04eH
// union <unnamed> volatile __io _A_TCCR1B
_A_TCCR1B:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,04cH
// union <unnamed> volatile __io _A_TCNT1
_A_TCNT1:
        DS8 2

        ASEGN ABSOLUTE:DATA:NOROOT,04aH
// union <unnamed> volatile __io _A_OCR1A
_A_OCR1A:
        DS8 2

        ASEGN ABSOLUTE:DATA:NOROOT,041H
// union <unnamed> volatile __io _A_WDTCR
_A_WDTCR:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,038H
// union <unnamed> volatile __io _A_PORTB
_A_PORTB:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,037H
// union <unnamed> volatile __io _A_DDRB
_A_DDRB:
        DS8 1
//    2 #include<inavr.h>
//    3 

        RSEG NEAR_N:DATA:NOROOT(0)
//    4 __no_init unsigned char flag;
flag:
        DS8 1
//    5 
//    6 #pragma vector = TIMER1_COMPA_vect

        RSEG CODE:CODE:NOROOT(1)
//    7 __interrupt void isr_TIMER1_COMPA_vect()
isr_TIMER1_COMPA_vect:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function isr_TIMER1_COMPA_vect
//    8 {
        ST      -Y, R17
          CFI R17 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R16
          CFI R16 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        IN      R17, 0x3F
//    9  if(flag == 0)
        LDS     R16, flag
        TST     R16
        BRNE    ??isr_TIMER1_COMPA_vect_0
//   10  {
//   11    WDTCR = (0 << WDP2) | (1 << WDP1) | (1 << WDP0);
        LDI     R16, 3
        OUT     0x21, R16
//   12    WDTCR |= (1 << WDE);
        IN      R16, 0x21
        ORI     R16, 0x08
        OUT     0x21, R16
//   13    flag = 1;
        LDI     R16, 1
        STS     flag, R16
//   14    TIMSK = (0 << OCIE1A);
        LDI     R16, 0
        OUT     0x39, R16
        RJMP    ??isr_TIMER1_COMPA_vect_1
//   15  }
//   16  else
//   17  {
//   18    WDTCR = (0 << WDP2) | (1 << WDP1) | (0 << WDP0);
??isr_TIMER1_COMPA_vect_0:
        LDI     R16, 2
        OUT     0x21, R16
//   19    WDTCR |= (1 << WDE);
        IN      R16, 0x21
        ORI     R16, 0x08
        OUT     0x21, R16
//   20    flag = 0;
        LDI     R16, 0
        STS     flag, R16
//   21    TIMSK = (0 << OCIE1A);
        LDI     R16, 0
        OUT     0x39, R16
//   22  }
//   23 }
??isr_TIMER1_COMPA_vect_1:
        OUT     0x3F, R17
        LD      R16, Y+
          CFI R16 SameValue
          CFI CFA_Y Y+1
        LD      R17, Y+
          CFI R17 SameValue
          CFI CFA_Y Y+0
        RETI
          CFI EndBlock cfiBlock0
        REQUIRE _A_WDTCR
        REQUIRE _A_TIMSK
//   24 
//   25 

        RSEG CODE:CODE:NOROOT(1)
//   26 void main( void )
main:
          CFI Block cfiBlock1 Using cfiCommon1
          CFI Function main
//   27 {
//   28   TIMSK |= (1 << OCIE1A);
        IN      R16, 0x39
        ORI     R16, 0x10
        OUT     0x39, R16
//   29   __enable_interrupt();
        SEI
//   30   DDRB = (1 << PB0);
        LDI     R16, 1
        OUT     0x17, R16
//   31   if(flag == 0)
        LDS     R16, flag
        TST     R16
        BRNE    ??main_0
//   32   {
//   33     PORTB = (1 << PB0);
        LDI     R16, 1
        OUT     0x18, R16
//   34     TCCR1A = (1 << WGM11) | (1 << WGM10);
        LDI     R16, 3
        OUT     0x2F, R16
//   35     TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (1 << CS11) | (0 << CS10);
        LDI     R16, 26
        OUT     0x2E, R16
//   36     OCR1A = 16804; //22665;
        LDI     R16, 164
        LDI     R17, 65
        OUT     0x2B, R17
        OUT     0x2A, R16
//   37     TCNT1 = 0;
        LDI     R16, 0
        LDI     R17, 0
        OUT     0x2D, R17
        OUT     0x2C, R16
        RJMP    ??main_1
//   38   }
//   39   else
//   40   {
//   41     PORTB = (0 << PB0);
??main_0:
        LDI     R16, 0
        OUT     0x18, R16
//   42     TCCR1A = (1 << WGM11) | (1 << WGM10);
        LDI     R16, 3
        OUT     0x2F, R16
//   43     TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (1 << CS11) | (0 << CS10);
        LDI     R16, 26
        OUT     0x2E, R16
//   44     OCR1A = 9380; //12335;
        LDI     R16, 164
        LDI     R17, 36
        OUT     0x2B, R17
        OUT     0x2A, R16
//   45     TCNT1 = 0;
        LDI     R16, 0
        LDI     R17, 0
        OUT     0x2D, R17
        OUT     0x2C, R16
//   46   } 
//   47   while(1)
??main_1:
        RJMP    ??main_1
          CFI EndBlock cfiBlock1
        REQUIRE _A_TIMSK
        REQUIRE _A_DDRB
        REQUIRE _A_PORTB
        REQUIRE _A_TCCR1A
        REQUIRE _A_TCCR1B
        REQUIRE _A_OCR1A
        REQUIRE _A_TCNT1
//   48     ;
//   49 }

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        COMMON INTVEC:CODE:ROOT(1)
        ORG 24
`??isr_TIMER1_COMPA_vect??INTVEC 24`:
        JMP     isr_TIMER1_COMPA_vect

        END
// 
//  10 bytes in segment ABSOLUTE
// 144 bytes in segment CODE
//   4 bytes in segment INTVEC
//   1 byte  in segment NEAR_N
// 
// 144 bytes of CODE memory (+  4 bytes shared)
//   1 byte  of DATA memory (+ 10 bytes shared)
//
//Errors: none
//Warnings: none
