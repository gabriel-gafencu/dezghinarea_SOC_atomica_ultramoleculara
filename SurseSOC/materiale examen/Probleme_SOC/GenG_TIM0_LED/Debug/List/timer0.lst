###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.11.1.50453 for Atmel AVR        19/Dec/2015  17:37:52 #
# Copyright 1996-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\soc2015\1305B\LucruExtra\GenG_TIM0_LED\timer0.c       #
#    Command line =  D:\soc2015\1305B\LucruExtra\GenG_TIM0_LED\timer0.c       #
#                    --cpu=m16 -ms -o D:\soc2015\1305B\LucruExtra\GenG_TIM0_L #
#                    ED\Debug\Obj\ -lC D:\soc2015\1305B\LucruExtra\GenG_TIM0_ #
#                    LED\Debug\List\ -lA D:\soc2015\1305B\LucruExtra\GenG_TIM #
#                    0_LED\Debug\List\ --initializers_in_flash --no_cse       #
#                    --no_inline --no_code_motion --no_cross_call             #
#                    --no_clustering --no_tbaa --debug                        #
#                    -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 --clib -On #
#    List file    =  D:\soc2015\1305B\LucruExtra\GenG_TIM0_LED\Debug\List\tim #
#                    er0.lst                                                  #
#    Object file  =  D:\soc2015\1305B\LucruExtra\GenG_TIM0_LED\Debug\Obj\time #
#                    r0.r90                                                   #
#                                                                             #
#                                                                             #
###############################################################################

D:\soc2015\1305B\LucruExtra\GenG_TIM0_LED\timer0.c
      1          #include "timer0.h"

   \                                 In  segment ABSOLUTE, at 0x53
   \   union <unnamed> volatile __io _A_TCCR0
   \                     _A_TCCR0:
   \   00000000                      DS8 1
      2          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      3          unsigned int softCount;
   \                     softCount:
   \   00000000                      DS8 2
      4          

   \                                 In  segment CODE, align 2, keep-with-next
      5          void TIMER0_init()
   \                     TIMER0_init:
      6          {
      7            TCCR0 = (0 << WGM01) | (0 << WGM00) | (1 << CS02) | (0 << CS01) | (1 << CS00);
   \   00000000   E005               LDI     R16, 5
   \   00000002   BF03               OUT     0x33, R16
      8          }
   \   00000004   9508               RET
   \   00000006                      REQUIRE _A_TCCR0
      9          

   \                                 In  segment CODE, align 2, keep-with-next
     10          __interrupt void isr_TIMER0_OVF_vect()
   \                     isr_TIMER0_OVF_vect:
     11          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   932A               ST      -Y, R18
   \   00000006   931A               ST      -Y, R17
   \   00000008   930A               ST      -Y, R16
   \   0000000A   B72F               IN      R18, 0x3F
     12            if(softCount < 8)
   \   0000000C   91E0....           LDS     R30, softCount
   \   00000010   91F0....           LDS     R31, (softCount + 1)
   \   00000014   9738               SBIW    R31:R30, 8
   \   00000016   F448               BRCC    ??isr_TIMER0_OVF_vect_0
     13              softCount++;
   \   00000018   ....               LDI     R30, LOW(softCount)
   \   0000001A   ....               LDI     R31, (softCount) >> 8
   \   0000001C   8100               LD      R16, Z
   \   0000001E   8111               LDD     R17, Z+1
   \   00000020   5F0F               SUBI    R16, 255
   \   00000022   4F1F               SBCI    R17, 255
   \   00000024   8300               ST      Z, R16
   \   00000026   8311               STD     Z+1, R17
   \   00000028   C006               RJMP    ??isr_TIMER0_OVF_vect_1
     14            else
     15              softCount = 0;
   \                     ??isr_TIMER0_OVF_vect_0:
   \   0000002A   E000               LDI     R16, 0
   \   0000002C   E010               LDI     R17, 0
   \   0000002E   9300....           STS     softCount, R16
   \   00000032   9310....           STS     (softCount + 1), R17
     16          }
   \                     ??isr_TIMER0_OVF_vect_1:
   \   00000036   BF2F               OUT     0x3F, R18
   \   00000038   9109               LD      R16, Y+
   \   0000003A   9119               LD      R17, Y+
   \   0000003C   9129               LD      R18, Y+
   \   0000003E   91E9               LD      R30, Y+
   \   00000040   91F9               LD      R31, Y+
   \   00000042   9518               RETI

   \                                 In  segment INTVEC, offset 0x24, root
   \                     `??isr_TIMER0_OVF_vect??INTVEC 36`:
   \   00000024   ........           JMP     isr_TIMER0_OVF_vect

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
       0      2  TIMER0_init
       5      2  isr_TIMER0_OVF_vect


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??isr_TIMER0_OVF_vect??INTVEC 36
       6  TIMER0_init
       1  _A_TCCR0
      68  isr_TIMER0_OVF_vect
       2  softCount
       6  -- Other

 
  1 byte  in segment ABSOLUTE
 74 bytes in segment CODE
  6 bytes in segment INITTAB
  4 bytes in segment INTVEC
  2 bytes in segment NEAR_Z
 
 74 bytes of CODE memory (+ 10 bytes shared)
  2 bytes of DATA memory (+  1 byte  shared)

Errors: none
Warnings: none
